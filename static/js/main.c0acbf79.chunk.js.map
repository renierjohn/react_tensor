{"version":3,"sources":["utilities.js","App.js","index.js"],"names":["drawRect","detections","ctx","forEach","prediction","x","y","height","width","txt","strokeStyle","fillStyle","font","beginPath","fillText","rect","stroke","App","webcamRef","useRef","canvasRef","runCoco","a","cocossd","net","setInterval","detect","current","video","readyState","videoWidth","videoHeight","obj","console","log","getContext","useEffect","className","ref","muted","style","position","marginLeft","marginRight","left","right","textAlign","zindex","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+ZAAaA,EAAW,SAACC,EAAWC,GACnCD,EAAWE,SAAS,SAACC,GAAgB,IAAD,cACRA,EAAU,KADF,GAC5BC,EAD4B,KAC1BC,EAD0B,KACxBC,EADwB,KACjBC,EADiB,KAE7BC,EAAML,EAAU,MAGtBF,EAAIQ,YADU,QAEdR,EAAIS,UAFU,QAGdT,EAAIU,KAAO,aAEXV,EAAIW,YACJX,EAAIY,SAASL,EAAIJ,EAAEC,GACnBJ,EAAIa,KAAKV,EAAEC,EAAEE,EAAMD,GACnBL,EAAIc,aCiFSC,MAnFf,WACE,IAAMC,EAAYC,iBAAO,MACnBC,EAAYD,iBAAO,MAGnBE,EAAO,uCAAG,4BAAAC,EAAA,sEACIC,SADJ,OACRC,EADQ,OAEdC,aAAY,WACVC,EAAOF,KACN,IAJW,2CAAH,qDAOPE,EAAM,uCAAG,WAAOF,GAAP,uBAAAF,EAAA,yDAGkB,qBAAtBJ,EAAUS,SACK,OAAtBT,EAAUS,SAC6B,IAAvCT,EAAUS,QAAQC,MAAMC,WALb,wBAQLD,EAAQV,EAAUS,QAAQC,MAC1BE,EAAaZ,EAAUS,QAAQC,MAAME,WACrCC,EAAcb,EAAUS,QAAQC,MAAMG,YAG5Cb,EAAUS,QAAQC,MAAMpB,MAAQsB,EAChCZ,EAAUS,QAAQC,MAAMrB,OAASwB,EAGjCX,EAAUO,QAAQnB,MAAQsB,EAC1BV,EAAUO,QAAQpB,OAASwB,EAlBhB,UAoBOP,EAAIE,OAAOE,GApBlB,QAoBLI,EApBK,OAqBXC,QAAQC,IAAIF,GAEN9B,EAAMkB,EAAUO,QAAQQ,WAAW,MAIzCnC,EAASgC,EAAI9B,GA3BF,4CAAH,sDAiCZ,OAFAkC,qBAAU,WAAKf,MAAW,IAGxB,yBAAKgB,UAAU,OACb,4BAAQA,UAAU,cAChB,kBAAC,IAAD,CACEC,IAAKpB,EACLqB,OAAO,EACPC,MAAO,CACLC,SAAU,WACVC,WAAY,OACZC,YAAa,OACbC,KAAM,EACNC,MAAO,EACPC,UAAW,SACXC,OAAQ,EACRvC,MAAO,IACPD,OAAQ,OAIZ,4BACE+B,IAAKlB,EACLoB,MAAO,CACLC,SAAU,WACVC,WAAY,OACZC,YAAa,OACbC,KAAM,EACNC,MAAO,EACPC,UAAW,SACXC,OAAQ,EACRvC,MAAO,IACPD,OAAQ,UCjFpByC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.c0acbf79.chunk.js","sourcesContent":["export const drawRect = (detections,ctx) =>{\r\n\tdetections.forEach( (prediction) => {\r\n\t\tconst [x,y,height,width] = prediction['bbox'];\r\n\t\tconst txt = prediction['class'];\r\n\t\t\r\n\t\tconst color = 'green';\r\n\t\tctx.strokeStyle = color;\r\n\t\tctx.fillStyle = color;\r\n\t\tctx.font = '20px Arial';\r\n\t\t\r\n\t\tctx.beginPath();\r\n\t\tctx.fillText(txt,x,y);\r\n\t\tctx.rect(x,y,width,height);\r\n\t\tctx.stroke();\r\n\t});\r\n\r\n};","// Import dependencies\r\nimport React, { useRef, useState, useEffect } from \"react\";\r\nimport * as tf from \"@tensorflow/tfjs\";\r\nimport * as cocossd from \"@tensorflow-models/coco-ssd\";\r\n\r\nimport Webcam from \"react-webcam\";\r\nimport \"./App.css\";\r\n\r\nimport { drawRect } from \"./utilities\";\r\n// e.g. import { drawRect } from \"./utilities\";\r\n\r\nfunction App() {\r\n  const webcamRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n\r\n  // Main function\r\n  const runCoco = async () => {\r\n    const net = await cocossd.load();\r\n    setInterval(() => {\r\n      detect(net);\r\n    }, 10);\r\n  };\r\n\r\n  const detect = async (net) => {\r\n    // Check data is available\r\n    if (\r\n      typeof webcamRef.current !== \"undefined\" &&\r\n      webcamRef.current !== null &&\r\n      webcamRef.current.video.readyState === 4\r\n    ) {\r\n      \r\n      const video = webcamRef.current.video;\r\n      const videoWidth = webcamRef.current.video.videoWidth;\r\n      const videoHeight = webcamRef.current.video.videoHeight;\r\n\r\n      \r\n      webcamRef.current.video.width = videoWidth;\r\n      webcamRef.current.video.height = videoHeight;\r\n\r\n      \r\n      canvasRef.current.width = videoWidth;\r\n      canvasRef.current.height = videoHeight;\r\n\r\n      const obj = await net.detect(video);\r\n      console.log(obj);\r\n\r\n      const ctx = canvasRef.current.getContext(\"2d\");\r\n\r\n      // 5. TODO - Update drawing utility\r\n      // drawSomething(obj, ctx)  \r\n      drawRect(obj,ctx);\r\n    }\r\n  };\r\n\r\n  useEffect(()=>{runCoco()},[]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <Webcam\r\n          ref={webcamRef}\r\n          muted={true} \r\n          style={{\r\n            position: \"absolute\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            left: 0,\r\n            right: 0,\r\n            textAlign: \"center\",\r\n            zindex: 9,\r\n            width: 640,\r\n            height: 480,\r\n          }}\r\n        />\r\n\r\n        <canvas\r\n          ref={canvasRef}\r\n          style={{\r\n            position: \"absolute\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            left: 0,\r\n            right: 0,\r\n            textAlign: \"center\",\r\n            zindex: 8,\r\n            width: 640,\r\n            height: 480,\r\n          }}\r\n        />\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}